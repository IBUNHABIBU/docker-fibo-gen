# Name of your application. Used to uniquely configure containers.
service: writehub

# Name of the container image.
image: ibunhabibu/writehub

# Deploy to these servers.
servers:
  web:
    - 139.162.238.85
  # job:
  #   hosts:
  #     - 192.168.0.1
  #   cmd: bin/jobs

# Enable SSL auto certification via Let's Encrypt (and allow for multiple apps on one server).
# Set ssl: false if using something like Cloudflare to terminate SSL (but keep host!).
proxy:
  ssl: true
  host: habibtech.online

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: ibunhabibu

  # Always use an access token rather than a real password (pulled from .kamal/secrets).
  password: KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch: amd64

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  clear:
    DB_HOST: 139.162.238.85
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PSWD

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# Use a different SSH user than root
ssh:
  user: deployer

accessories:
  db:
    image: postgres:15
    host: 139.162.238.85
    port: 5433  # Ensure this is the correct port or change it to 5432 if needed
    env:
      clear:
        POSTGRES_USER: 'postgres'
        POSTGRES_DB: 'writehub_production'
      secret:
        - POSTGRES_PSWD
    files:
      - config/init.sql:/docker-entrypoint-initdb.d/setup.sql
    # directories:
    #   - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data
